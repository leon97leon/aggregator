import pandas as pd
import os.path
import string
import warnings
warnings.filterwarnings('ignore')
import gensim
from gensim import corpora, models
import nltk
import os
import codecs
from sklearn import feature_extraction
import mpld3
from nltk.tokenize import word_tokenize
from nltk.tokenize import sent_tokenize
from nltk.tokenize import regexp_tokenize
from nltk.tokenize import TweetTokenizer
from collections import Counter
from nltk.stem import WordNetLemmatizer
from nltk.corpus import stopwords
from gensim.corpora.dictionary import Dictionary
from gensim.models.tfidfmodel import TfidfModel
import pymorphy2
from nltk.stem.snowball import SnowballStemmer

nltk.download('stopwords')
nltk.download('punkt')

stopwords = nltk.corpus.stopwords.words('russian')

class ML():
    def stopwords(self,list):
        stopwords = nltk.corpus.stopwords.words('russian')
        stopwords2 = ["c", "а", "алло", "без", "белый", "близко", "более", "больше", "большой", "будем", "будет",
                      "будете", "будешь", "будто", "буду", "будут", "будь", "бы", "бывает", "бывь", "был", "была",
                      "были", "было", "быть", "в", "важная", "важное", "важные", "важный", "вам", "вами", "вас", "ваш",
                      "ваша", "ваше", "ваши", "вверх", "вдали", "вдруг", "ведь", "везде", "вернуться", "весь", "вечер",
                      "взгляд", "взять", "вид", "видел", "видеть", "вместе", "вне", "вниз", "внизу", "во", "вода",
                      "война", "вокруг", "вон", "вообще", "вопрос", "восемнадцатый", "восемнадцать", "восемь",
                      "восьмой", "вот", "впрочем", "времени", "время", "все", "все еще", "всегда", "всего", "всем",
                      "всеми", "всему", "всех", "всею", "всю", "всюду", "вся", "всё", "второй", "вы", "выйти", "г",
                      "где", "главный", "глаз", "говорил", "говорит", "говорить", "год", "года", "году", "голова",
                      "голос", "город", "да", "давать", "давно", "даже", "далекий", "далеко", "дальше", "даром", "дать",
                      "два", "двадцатый", "двадцать", "две", "двенадцатый", "двенадцать", "дверь", "двух",
                      "девятнадцатый", "девятнадцать", "девятый", "девять", "действительно", "дел", "делал", "делать",
                      "делаю", "дело", "день", "деньги", "десятый", "десять", "для", "до", "довольно", "долго",
                      "должен", "должно", "должный", "дом", "дорога", "друг", "другая", "другие", "других", "друго",
                      "другое", "другой", "думать", "душа", "е", "его", "ее", "ей", "ему", "если", "есть", "еще", "ещё",
                      "ею", "её", "ж", "ждать", "же", "жена", "женщина", "жизнь", "жить", "за", "занят", "занята",
                      "занято", "заняты", "затем", "зато", "зачем", "здесь", "земля", "знать", "значит", "значить", "и",
                      "иди", "идти", "из", "или", "им", "имеет", "имел", "именно", "иметь", "ими", "имя", "иногда",
                      "их", "к", "каждая", "каждое", "каждые", "каждый", "кажется", "казаться", "как", "какая", "какой",
                      "кем", "книга", "когда", "кого", "ком", "комната", "кому", "конец", "конечно", "которая",
                      "которого", "которой", "которые", "который", "которых", "кроме", "кругом", "кто", "куда",
                      "лежать", "лет", "ли", "лицо", "лишь", "лучше", "любить", "люди", "м", "маленький", "мало",
                      "мать", "машина", "между", "меля", "менее", "меньше", "меня", "место", "миллионов", "мимо",
                      "минута", "мир", "мира", "мне", "много", "многочисленная", "многочисленное", "многочисленные",
                      "многочисленный", "мной", "мною", "мог", "могу", "могут", "мож", "может", "может быть", "можно",
                      "можхо", "мои", "мой", "мор", "москва", "мочь", "моя", "моё", "мы", "на", "наверху", "над",
                      "надо", "назад", "наиболее", "найти", "наконец", "нам", "нами", "народ", "нас", "начала",
                      "начать", "наш", "наша", "наше", "наши", "не", "него", "недавно", "недалеко", "нее", "ней",
                      "некоторый", "нельзя", "нем", "немного", "нему", "непрерывно", "нередко", "несколько", "нет",
                      "нею", "неё", "ни", "нибудь", "ниже", "низко", "никакой", "никогда", "никто", "никуда", "ним",
                      "ними", "них", "ничего", "ничто", "но", "новый", "нога", "ночь", "ну", "нужно", "нужный", "нх",
                      "о", "об", "оба", "обычно", "один", "одиннадцатый", "одиннадцать", "однажды", "однако", "одного",
                      "одной", "оказаться", "окно", "около", "он", "она", "они", "оно", "опять", "особенно", "остаться",
                      "от", "ответить", "отец", "откуда", "отовсюду", "отсюда", "очень", "первый", "перед", "писать",
                      "плечо", "по", "под", "подойди", "подумать", "пожалуйста", "позже", "пойти", "пока", "пол",
                      "получить", "помнить", "понимать", "понять", "пор", "пора", "после", "последний", "посмотреть",
                      "посреди", "потом", "потому", "почему", "почти", "правда", "прекрасно", "при", "про", "просто",
                      "против", "процентов", "путь", "пятнадцатый", "пятнадцать", "пятый", "пять", "работа", "работать",
                      "раз", "разве", "рано", "раньше", "ребенок", "решить", "россия", "рука", "русский", "ряд",
                      "рядом", "с", "с кем", "сам", "сама", "сами", "самим", "самими", "самих", "само", "самого",
                      "самой", "самом", "самому", "саму", "самый", "свет", "свое", "своего", "своей", "свои", "своих",
                      "свой", "свою", "сделать", "сеаой", "себе", "себя", "сегодня", "седьмой", "сейчас", "семнадцатый",
                      "семнадцать", "семь", "сидеть", "сила", "сих", "сказал", "сказала", "сказать", "сколько",
                      "слишком", "слово", "случай", "смотреть", "сначала", "снова", "со", "собой", "собою", "советский",
                      "совсем", "спасибо", "спросить", "сразу", "стал", "старый", "стать", "стол", "сторона", "стоять",
                      "страна", "суть", "считать", "т", "та", "так", "такая", "также", "таки", "такие", "такое",
                      "такой", "там", "твои", "твой", "твоя", "твоё", "те", "тебе", "тебя", "тем", "теми", "теперь",
                      "тех", "то", "тобой", "тобою", "товарищ", "тогда", "того", "тоже", "только", "том", "тому", "тот",
                      "тою", "третий", "три", "тринадцатый", "тринадцать", "ту", "туда", "тут", "ты", "тысяч", "у",
                      "увидеть", "уж", "уже", "улица", "уметь", "утро", "хороший", "хорошо", "хотел бы", "хотеть",
                      "хоть", "хотя", "хочешь", "час", "часто", "часть", "чаще", "чего", "человек", "чем", "чему",
                      "через", "четвертый", "четыре", "четырнадцатый", "четырнадцать", "что", "чтоб", "чтобы", "чуть",
                      "шестнадцатый", "шестнадцать", "шестой", "шесть", "эта", "эти", "этим", "этими", "этих", "это",
                      "этого", "этой", "этом", "этому", "этот", "эту", "я", "являюсь", 'здравствуйте', 'добрый день',
                      'прошу']
        stopwords3 = ['а', 'е', 'и', 'ж', 'м', 'о', 'на', 'не', 'ни', 'об', 'но', 'он', 'мне', 'мои', 'мож', 'она',
                      'они', 'оно', 'мной', 'много', 'многочисленное', 'многочисленная', 'многочисленные',
                      'многочисленный', 'мною', 'мой', 'мог', 'могут', 'можно', 'может', 'можхо', 'мор', 'моя', 'моё',
                      'мочь', 'над', 'нее', 'оба', 'нам', 'нем', 'нами', 'ними', 'мимо', 'немного', 'одной', 'одного',
                      'менее', 'однажды', 'однако', 'меня', 'нему', 'меньше', 'ней', 'наверху', 'него', 'ниже', 'мало',
                      'надо', 'один', 'одиннадцать', 'одиннадцатый', 'назад', 'наиболее', 'недавно', 'миллионов',
                      'недалеко', 'между', 'низко', 'меля', 'нельзя', 'нибудь', 'непрерывно', 'наконец', 'никогда',
                      'никуда', 'нас', 'наш', 'нет', 'нею', 'неё', 'них', 'мира', 'наша', 'наше', 'наши', 'ничего',
                      'начала', 'нередко', 'несколько', 'обычно', 'опять', 'около', 'мы', 'ну', 'нх', 'от', 'отовсюду',
                      'особенно', 'нужно', 'очень', 'отсюда', 'в', 'во', 'вон', 'вниз', 'внизу', 'вокруг', 'вот',
                      'восемнадцать', 'восемнадцатый', 'восемь', 'восьмой', 'вверх', 'вам', 'вами', 'важное', 'важная',
                      'важные', 'важный', 'вдали', 'везде', 'ведь', 'вас', 'ваш', 'ваша', 'ваше', 'ваши', 'впрочем',
                      'весь', 'вдруг', 'вы', 'все', 'второй', 'всем', 'всеми', 'времени', 'время', 'всему', 'всего',
                      'всегда', 'всех', 'всею', 'всю', 'вся', 'всё', 'всюду', 'г', 'год', 'говорил', 'говорит', 'года',
                      'году', 'где', 'да', 'ее', 'за', 'из', 'ли', 'же', 'им', 'до', 'по', 'ими', 'под', 'иногда',
                      'довольно', 'именно', 'долго', 'позже', 'более', 'должно', 'пожалуйста', 'значит', 'иметь',
                      'больше', 'пока', 'ему', 'имя', 'пор', 'пора', 'потом', 'потому', 'после', 'почему', 'почти',
                      'посреди', 'ей', 'два', 'две', 'двенадцать', 'двенадцатый', 'двадцать', 'двадцатый', 'двух',
                      'его', 'дел', 'или', 'без', 'день', 'занят', 'занята', 'занято', 'заняты', 'действительно',
                      'давно', 'девятнадцать', 'девятнадцатый', 'девять', 'девятый', 'даже', 'алло', 'жизнь', 'далеко',
                      'близко', 'здесь', 'дальше', 'для', 'лет', 'зато', 'даром', 'первый', 'перед', 'затем', 'зачем',
                      'лишь', 'десять', 'десятый', 'ею', 'её', 'их', 'бы', 'еще', 'при', 'был', 'про', 'процентов',
                      'против', 'просто', 'бывает', 'бывь', 'если', 'люди', 'была', 'были', 'было', 'будем', 'будет',
                      'будете', 'будешь', 'прекрасно', 'буду', 'будь', 'будто', 'будут', 'ещё', 'пятнадцать',
                      'пятнадцатый', 'друго', 'другое', 'другой', 'другие', 'другая', 'других', 'есть', 'пять', 'быть',
                      'лучше', 'пятый', 'к', 'ком', 'конечно', 'кому', 'кого', 'когда', 'которой', 'которого',
                      'которая', 'которые', 'который', 'которых', 'кем', 'каждое', 'каждая', 'каждые', 'каждый',
                      'кажется', 'как', 'какой', 'какая', 'кто', 'кроме', 'куда', 'кругом', 'с', 'т', 'у', 'я', 'та',
                      'те', 'уж', 'со', 'то', 'том', 'снова', 'тому', 'совсем', 'того', 'тогда', 'тоже', 'собой',
                      'тобой', 'собою', 'тобою', 'сначала', 'только', 'уметь', 'тот', 'тою', 'хорошо', 'хотеть',
                      'хочешь', 'хоть', 'хотя', 'свое', 'свои', 'твой', 'своей', 'своего', 'своих', 'свою', 'твоя',
                      'твоё', 'раз', 'уже', 'сам', 'там', 'тем', 'чем', 'сама', 'сами', 'теми', 'само', 'рано', 'самом',
                      'самому', 'самой', 'самого', 'семнадцать', 'семнадцатый', 'самим', 'самими', 'самих', 'саму',
                      'семь', 'чему', 'раньше', 'сейчас', 'чего', 'сегодня', 'себе', 'тебе', 'сеаой', 'человек',
                      'разве', 'теперь', 'себя', 'тебя', 'седьмой', 'спасибо', 'слишком', 'так', 'такое', 'такой',
                      'такие', 'также', 'такая', 'сих', 'тех', 'чаще', 'четвертый', 'через', 'часто', 'шестой',
                      'шестнадцать', 'шестнадцатый', 'шесть', 'четыре', 'четырнадцать', 'четырнадцатый', 'сколько',
                      'сказал', 'сказала', 'сказать', 'ту', 'ты', 'три', 'эта', 'эти', 'что', 'это', 'чтоб', 'этом',
                      'этому', 'этой', 'этого', 'чтобы', 'этот', 'стал', 'туда', 'этим', 'этими', 'рядом', 'тринадцать',
                      'тринадцатый', 'этих', 'третий', 'тут', 'эту', 'суть', 'чуть', 'тысяч', 'самый', 'самой', 'д']
        stopwords_from_lena = ['декабря', 'январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август',
                               'сентябрь', 'октябрь', 'ноябрь', 'ap', 'иб', 'вроде', 'open', 'bankng', '––', 'п',
                               'идти']
        stopwords3.extend(stopwords_from_lena)
        stopwords2.extend(stopwords3)
        stopwords.extend(stopwords2)
        no_stops = [word for word in list if word not in stopwords]
        return no_stops

    def remove_chars_from_text(self,text, chars):
        return ''.join([i for i in text if i not in chars])

    def tokenize(self,text):
        tokens = [word for word in word_tokenize(text)]
        return tokens

    def join_sent(self,spisok):
        return ' '.join(spisok)

    def archive(self):
        self.corpus = []
        for i in range(len(self.file_names)):
            if os.path.exists(self.path_acrhive.format(name=self.file_names[i]).replace("/'", '/').replace(".txt'", ".txt")) == True:
                try:
                    with open(self.path_acrhive+self.file_names[i],
                              encoding='utf_8') as file_handler:
                        text = [line for line in file_handler]
                        self.corpus.append(text)
                except:
                    try:
                        with open(self.path_acrhive+self.file_names[i], encoding='ptcp154') as file_handler:
                            text = [line for line in file_handler]
                            self.corpus.append(text)
                    except Exception as e:
                        pass


    def run(self,path_reestr,path_acrhive):
        self.path_acrhive=path_acrhive
        df = pd.read_excel(path_reestr)
        df_true = df[df['Метка (Правда-1/ Ложь-0)'] == 1]
        self.file_names = df_true["Название файла"].tolist()
        for i in range(len(self.file_names)):
            if ' .txt' in self.file_names[i]:
                self.file_names[i] = self.file_names[i].replace(' .txt', '.txt')
            if self.file_names[i].endswith('.txt') != True:
                self.file_names[i] = self.file_names[i] + '.txt'
        self.archive()
        for i in range(len(self.corpus)):
            for j in range(len(self.corpus[i])):
                self.corpus[i][j] = self.corpus[i][j].lower()
                self.corpus[i][j] = self.remove_chars_from_text(self.corpus[i][j], string.digits)
                self.corpus[i][j] = self.corpus[i][j].replace('.', '').replace('\n', '').replace('a.', '').replace('b.',
                                                                                                         '').replace(
                    'c.', '').replace('d.', '').replace('e.', '').replace('\t', '').replace('\xa0', '').replace('©',
                                                                                                                '').replace(
                    'ifac', '').replace('\ufeff', '').replace('·', '').replace('•', '').replace('i', '').replace(',',
                                                                                                                 '').replace(
                    ':', '').replace('\\', '').replace('!', '').replace(')', '').replace('(', '').replace('-',
                                                                                                          '').replace(
                    ';', '').replace('"', '').replace('“', '').replace('”', '').replace('№', '').replace('«',
                                                                                                         '').replace(
                    '»', '').replace('#', '').replace('$', '').replace('%', '').replace('*', '').replace('&',
                                                                                                         '').replace(
                    '''''', '').replace('+', '').replace('/', '').replace('<', '').replace('>', '').replace('@',
                                                                                                            '').replace(
                    '[', '').replace(']', '').replace('^', '').replace('_', '').replace('`', '').replace('{',
                                                                                                         '').replace(
                    '}', '').replace('|', '').replace('~', '').replace('?', '').replace("''", '').replace("'",
                                                                                                          '').replace(
                    "=", '').replace('→', '').strip()

        self.new_corpus = []
        for i in range(len(self.corpus)):
            n = [self.corpus[i][j] for j in range(len(self.corpus[i])) if self.corpus[i][j] != '' if self.corpus[i][j] != ' ']
            self.new_corpus.append(n)



        spisok_with_full_strings = []
        for i in self.new_corpus:
            spisok_with_full_strings.append([self.join_sent(i)])

        totalvocab_tokenized = []
        for i in range(len(spisok_with_full_strings)):
            spisok_with_full_strings[i][0] = self.tokenize(spisok_with_full_strings[i][0])
            totalvocab_tokenized.append(spisok_with_full_strings[i][0])
        for i in range(len(totalvocab_tokenized)):
            totalvocab_tokenized[i] = self.stopwords(totalvocab_tokenized[i])


        morph = pymorphy2.MorphAnalyzer()
        l = []
        for i in range(len(totalvocab_tokenized)):
            k = [morph.parse(word)[0].normal_form for word in totalvocab_tokenized[i]]
            l.append(k)

        id2word = corpora.Dictionary(l)

        # Create Corpus: Term Document Frequency
        corpus = [id2word.doc2bow(text) for text in l]

        # Build LDA model
        lda_model = gensim.models.ldamodel.LdaModel(corpus=corpus,
                                                    id2word=id2word,
                                                    num_topics=10,
                                                    random_state=100,
                                                    update_every=1,
                                                    chunksize=10,
                                                    passes=10,
                                                    alpha='symmetric',
                                                    iterations=100,
                                                    per_word_topics=True)
        topics = lda_model.show_topics(formatted=False, num_topics=10, num_words=4)
        data_flat = [w for w_list in l for w in w_list]
        counter = Counter(data_flat)

        out = []
        for i, topic in topics:
            for word, weight in topic:
                out.append([word, i, weight, counter[word]])

        df = pd.DataFrame(out, columns=['word', 'topic_id', 'importance', 'word_count'])

        df_new = pd.DataFrame(columns=['keywords', 'method'])

        grouped_df = df.groupby('topic_id')

        for key, item in grouped_df:
            words = item['word'].tolist()
            # print(words)
            s = ''
            for i in words:
                s = s + i + ', '
            s = s[0:-2]
            new_row = {'keywords': s, 'method': 'LDA'}
            df_new = df_new.append(new_row, ignore_index=True)

        return df_new